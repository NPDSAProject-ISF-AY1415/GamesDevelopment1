<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_guardRight</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//Init guard
len = 200;
rot = 0;
xx = x + len;
yy = y;
alert = 0;
objectF = obj_test;
//objectF = obj_player;
count = 0;
timer = 3;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000101000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> //Check if object is in prop mode and is moving or if is in original form or if alerted by dog
if(objectF.sprite_index == spr_test || ((objectF.sprite_index != spr_test) &amp;&amp; (objectF.speed &gt; 0)) || alert == 2)
{
    if(alert == 3)
    {
   
        //pathfinding with dog
        grid = mp_grid_create(0,0,room_width/32,room_height/32,32,32);
        path = path_add();
        mp_grid_add_instances(path,obj_wall,1);
        mp_grid_add_instances(path,obj_platform,1);
        mp_grid_path(grid,path,x,y,objectF.x,y,0);
        path_start(path,3,"",1);
        timer -= 1/room_speed;
        if(timer == 0)
        {
            obj_guard.alert = 0;
            hspeed = 1;
            path_end();
            instance_create(x,y,obj_guard);
            instance_destroy();
            timer = 3;
        }
    }
    if(alert == 2)
    {

        //pathfinding with dog
        grid = mp_grid_create(0,0,room_width/32,room_height/32,32,32);
        path = path_add();
        mp_grid_add_instances(path,obj_wall,1);
        mp_grid_add_instances(path,obj_platform,1);
        mp_grid_path(grid,path,x,y,objectF.x,y,0);
        path_start(path,3,"",1);
        instDog = instance_nearest(x,y,obj_dog);
        if(instDog.alert == 0)
        {
            obj_guard.alert = 0;
            hspeed = 1;
            path_end();
            instance_create(x,y,obj_guard);
            instance_destroy();
        }
    }
    else if(alert == 1)
    {
    //Guard is follwing player by itself
        move_towards_point(objectF.x,y,3);
       
        if ((!collision_line(x,y,xx,yy,objectF,0,1)) &amp;&amp;(!collision_circle(x,y,64,objectF,0,1))) //&amp;&amp; !collision_line(x,y,xx,yy,obj_wall,0,1)
        {
            alert = 0;
            hspeed = 1;
            instance_create(x,y,obj_guard);
            instance_destroy();
        }
    }    
    else
    { 
        if(collision_line(x,y,xx,yy,objectF,0,1) || ( collision_circle(x,y,64,objectF,0,1)))
            alert = 1;
    }
}

// Switch sprites to face direction it is walking to
switch(direction div 90)
{
    case 0: sprite_index = spr_guardRight; 
    x1 = x + len;
    xx = x1;
    break;
    
    case 2: sprite_index = spr_guardLeft;
    xx = x - len;
    break;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// if guard is alerted
// Once detected player chase even if in prop form
if(alert &gt;= 1)
{
    if(!audio_is_playing(snd_radioChatter))
        audio_play_sound(snd_radioChatter,1,0);
    if(place_meeting(x,y,objectF))
    {
        show_message("You are caught");
        room_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>113</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_reverse_xdir</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_line(x,y,xx,yy);
draw_self();
//draw_circle(x,y,64,1);

if(alert &gt;= 1)
{
   draw_sprite(spr_alert,0,x,y-64);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
