<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test_deer</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialise Variables

grav = 0.2;     //gravity
hsp = 0;        //horizontal speed
vsp = 0;        //vertical speed
jumpspeed = 4;  //jump speed
movespeed = 4;  //pixel moved per action

image_index = 0;
image_speed = 0;

global.serum_collected = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>711</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Executed every frame

//Get the player's input
key_right = keyboard_check(vk_right);   //ord("D") can be used as well
key_left = -keyboard_check(vk_left);
key_up = keyboard_check(vk_up);         //jump 
key_down = keyboard_check(vk_down);

//React to inputs

move = key_left + key_right;
hsp = move * movespeed;
if(vsp &lt; 10)
    vsp += grav;
    
    
//Ladder Collision
if(place_meeting(x, y, obj_ladder))
{
    vsp = 0;
    grav = 0;
    if(key_up)
        vsp = -movespeed;
    if(key_down)
        vsp = movespeed;

}
else
    grav = 0.2;


if(place_meeting(x, y+1, obj_platform)) //are we on the floor?
{
    vsp = key_up * -jumpspeed;
}



//Horizontal Collision
if(place_meeting(x + hsp, y, obj_wall)) //are we about to collide?
{
    while(! place_meeting(x + sign(hsp), y, obj_wall)) //not hitting the wall
    {
        x += sign(hsp);
    }   
    hsp = 0;
}
x += hsp;

//Vertical Collision
if(place_meeting(x, y + vsp, obj_platform)) //are we about to collide?
{
    while(! place_meeting(x, y + sign(vsp), obj_platform)) //not hitting the wall
    {
        y += sign(vsp);
    }   
    vsp = 0;
}
y += vsp;

//Prop Collision

if (keyboard_check_pressed(vk_space))
{
    
    if(place_meeting(x, y, obj_prop)) 
    {
       //new_spriteindex = obj_prop.sprite_index;
       new_objectid = instance_nearest(x, y, obj_prop);
       obj_player.sprite_index = new_objectid.sprite_index;
       
    }
    else
    {
        // no nearby objects transform back
        obj_player.sprite_index = spr_test_deer;  
    }
}
if(obj_inventorycontrol.inv[0,1] == 1 || obj_inventorycontrol.inv[0,0])
{
    ystart = 196;
    xstart = 96;
    if(collision_circle(x,y,32,obj_gate,0,1))
    {
        show_message("You Win!");
        room_goto();
    }   
}
// Player movement
// Switch sprites to face direction it is walking to
switch(direction div 90)
{
    case 0: image_angle = 0; 
    break;
    
    case 2: image_angle = 180;
    break;
}

// Ladder mechanic
/*
if place_meeting(x,y,obj_ladder) then //if on a ladder... 
{ 
    gravity=0 //Don't fall 
    vspeed=0 
} 

if (keyboard_check(vk_up))then{
    if place_meeting(x,y,obj_ladder)
        {vspeed=-4}
}
if keyboard_check_released(vk_up) then{
    if place_meeting(x,y,obj_ladder){
        vspeed=0
    }
}
//Ladder Down
if (keyboard_check(vk_down)) then{
    if place_meeting(x,y,obj_ladder){
        vspeed=4
    }
}
if keyboard_check_released(vk_down) then{
    if place_meeting(x,y,obj_ladder){
        vspeed=0
    }
}
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>712</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_life</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_message("Game over");
room_restart();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="98">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_item_behavior(obj_inventorycontrol.inv[0,1]);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="97">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_item_behavior(obj_inventorycontrol.inv[0,0]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
